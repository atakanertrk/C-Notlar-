   
   
   https://www.c-sharpcorner.com/blogs/what-is-static-class-and-static-class-members-in-c-sharp
   
   
   
   
   
   
   
   
   class Program
    {
        public static int topla(int sayi1,int sayi2)   //fonksiyon static olarak tanımlanmasaydı main fonk içinde
        {                                              //Program.topla şeklinde erişemezdik. 
            int sonuc = sayi1 + sayi2;                //
            return sonuc;
        }

        static void Main(string[] args)
        {
            int sonuc = Program.topla(20, 30);
            Console.WriteLine(sonuc);
        }
    }
}
///////////////////////////////////////////////////////////////////////////////
    class Program
    {
        public int Sayi;
        public static int StatikSayi;
    
        static void Main(string[] args)
        {
            Sayi = 15;                      // Sayi değişkeni statik tanımlanmadığı zaman erişilemez
            StatikSayi = 20;
        }
    }
**************************************************************************************************************
static class Teacher
    {
        //static üretilen bir sınıfın metodları da static tanımlanmalıdır
        public static int Number { get; set; }
        //main ana fonksiyonu içinde new işlemiyle(instance) nesne oluşturulmadan direk Teacher.Number şeklinde kullanılır
        //not: static nesneler ortak nesnelerdir direk hafıza tutulur, bir yerde değişirse her yerde değişir

    }

    static class Utilities
    {
        public static void Validate()
        {
            Console.WriteLine("Validation is done");
        }
    }
    
    class Manager//class static olmadan metodlar static olabilir
    {   //static metod tanımladığımda artık ben main'in içinde Manager.DoSomething diye kullanabilirim
        public static void DoSomething()//new ... diyip oluşturmam gerekmeden.
        {
            Console.WriteLine("done");
        }
        public void DoSomething2()
        {
            Console.WriteLine("done2");
        }
    }
